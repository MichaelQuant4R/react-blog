{"version":3,"sources":["auth/UserContext.jsx","components/Footer.jsx","pages/Blogs.jsx","pages/Home.jsx","pages/About.jsx","components/BlogPost.jsx","pages/Profile.jsx","pages/Login.jsx","pages/Signup.jsx","components/withAuth.jsx","pages/NotFound.jsx","components/Comment.jsx","pages/Blog.jsx","components/Navbar.jsx","components/Bell.jsx","components/NavbarAuth.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["User","React","createContext","Footer","props","authorImage","borderRadius","height","width","Blogs","useState","loading","setLoading","setData","noMoreData","setNoMoreData","maxRef","useRef","list","postList","setPostList","page","setPage","loader","useEffect","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","console","log","current","observe","fetchBlogs","a","fetch","method","mode","headers","then","resp","ok","json","Error","status","continueScrolling","length","catch","error","entities","target","isIntersecting","className","map","post","index","title","style","src","image","to","author","user_id","timestamp","id","text","ref","Home","user","useContext","JSON","stringify","About","BlogPost","setText","setTitle","setError","posted","setPosted","textRef","titleRef","onSubmit","e","preventDefault","token","localStorage","getItem","titleData","textData","body","value","type","name","placeholder","required","onChange","Profile","handleInfo","username","sub","state","urlPath","info","checkID","parseInt","setState","email","blog","exist","jwtId","bind","this","context","match","params","jwt_decode","alt","Component","contextType","Login","emailRef","passwordRef","setUser","history","useHistory","accessToken","userJson","push","caches","open","cache","addAll","setItem","withAuth","setUsername","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isSignedUp","setIsSignedUp","exact","path","component","usernameData","emailData","passwordData","confirmPasswordData","NotFound","location","pathname","Comment","blogIdRef","useParams","comments","setComments","fetchComments","blogID","comment","i","Blog","fetchBlog","blogId","jsonUsername","jsonText","jsonId","jsonTitle","jsonTimestamp","jsonImage","data","blogData","withRouter","setLoginProfile","navbarLogin","Signup","notifyHidden","marginRight","transition","notifyShow","bellShow","backgroundColor","bellHide","currentNotifyStyle","setCurrentNotifyStyle","notifyList","setNotifyList","clickedBell","setClickedBell","toggleBell","setToggleBell","authorName","setAuthorName","authorId","setAuthorId","counting","setCounting","fetchBell","bellCountJson","bell","handleToken","decoded","handleNotify","userId","onClick","notify","getAuthorName","getAuthorId","author_id","author_image","blog_id","timstamp","createBrowserHistory","redirect","navbarAuth","App","setId","useMemo","keys","Array","cacheList","checkAuth","has","boolean","removeItem","Provider","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de1f5d4d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const User = React.createContext(null);","import React from \"react\";\nimport \"../css/footer.css\";\n\nconst Footer = props => {\n    \n    \n    return (\n    \n    <>\n    \n    <footer>\n    \n    \n    \n    </footer>\n    </>\n    \n    );\n    \n}\nexport default Footer;","import React, { useEffect, useState, useRef  } from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"../css/loading.css\";\nimport \"../css/blogs.css\";\n\nconst authorImage = {\n    \n    borderRadius:\"50%\",\n    height:\"50px\",\n    width:\"50px\"\n}\n\n\n\n\nconst Blogs = () => {\n    \n     const [loading, setLoading] = React.useState(true);\n    const [data, setData] = React.useState(null);\n    const [noMoreData, setNoMoreData] = React.useState(false);\n    \n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n    \n    const maxRef = useRef(0);\n    \n    const [postList, setPostList] = useState({\n        list: []\n    }); \n    // tracking on which page we currently are\n    const [page, setPage] = useState(0);\n    // add loader refrence \n    const loader = useRef(null);\n\n    useEffect(() => {\n         var options = {\n            root: null,\n            rootMargin: \"20px\",\n            threshold: 1.0\n         };\n        // initialize IntersectionObserver\n        // and attaching to Load More div\n         const observer = new IntersectionObserver(handleObserver, options);\n        \n        console.log(\"loader\", loader.current);\n         if (loader.current) {\n            observer.observe(loader.current)\n         }\n    }, []);\n    \n    \n    const fetchBlogs = async (page) => {\n        console.log(\"FETCH!\", page);\n        // NOT TRUE = FALSE, NOT FALSE = TRUE\n        if(!noMoreData){\n        fetch(`${urlPath}/api/blog_page/${page}`,{\n            method:\"GET\",\n            mode: \"cors\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                \"Access-Allow-Control-Origin\":\"*\",\n            }\n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                \n                throw new Error(resp.status);\n            }\n            else{\n                return resp.json();\n            }\n        })\n        .then(json => {\n            \n            console.log(\"JSON\", json);\n            \n            let continueScrolling = json[\"scroll\"];\n            \n            maxRef.current = json[\"max\"]\n            \n        console.log(\"CHECK LENGTH!\", maxRef.current, json[\"blogs\"].length);\n        if(maxRef.current !== json[\"blogs\"].length ||maxRef.current === json[\"blogs\"].length){\n            \n            if(continueScrolling){\n                \n                setData(json[\"blogs\"]);\n                \n                console.log(\"BLOGS\", json[\"blogs\"]);\n                setPostList({list: json[\"blogs\"]});\n                \n                \n                if(maxRef.current === json[\"blogs\"].length){\n                    setNoMoreData(true);\n                    setLoading(false);\n                    \n                }\n                console.log(\"MAX!\", json[\"max\"], maxRef.current);\n            }\n            else{\n                console.log(\"STOP SCROLLING\");\n                setLoading(false);\n            }\n                \n            }else{\n                \n                setNoMoreData(true);\n                console.log(\"FINISHED LOADING!\");\n                setLoading(false);\n            }\n            \n        })\n        .catch(error => {\n            console.log(error);\n        })\n            \n        };\n            \n    };\n\n\n    useEffect(() => {\n        // here we simulate adding new posts to List\n        \n        fetchBlogs(page);\n\n    }, [page])\n\n    // here we handle what happens when user scrolls to Load More div\n   // in this case we just update page variable\n    const handleObserver = (entities) => {\n        const target = entities[0];\n        if(!noMoreData){\n        if (target.isIntersecting) {   \n            setPage((page) => page + 1)\n        }\n        }\n    }\n\n\n    return (\n        <>\n            \n            <h4>Max: {maxRef.current}</h4>\n        <div className=\"blog-container\">\n        <div className=\"post-list\">\n            {\n                postList.list.map((post, index) => {\n                    return (<div key={index} className=\"blog-post\">\n                        <div >\n                        <h2> {post.title } </h2>\n                            <img style={authorImage} src={post.image}/>\n                            <Link to = {`/profile/${post.author}/${post.user_id}`}>\n                            <h4>Author: {post.author}</h4>\n                            </Link>\n                            \n                            <h5>Posted: {post.timestamp}</h5>\n                            <Link to={`/blog/${post.author}/${post.title}/${post.id}`}>\n                                <span>Read More</span>\n                            </Link>\n                            <p>\n                                {post.text}\n                                \n                            </p>\n                            \n                            \n                            \n                        </div>\n                    </div>)\n                })\n            }\n            {loading?(\n            <div className=\"loader\" ref={loader}>\n                    \n           </div>):\n            \n            (\n                <div>Finished</div>\n                )}\n            \n        </div>\n            \n    </div>\n               \n    </>)\n}\n\nexport default Blogs;","import React from \"react\";\nimport {User} from \"../auth/UserContext\";\nimport Footer from \"../components/Footer\";\nimport Blogs from \"./Blogs\";\n\nconst Home = props => {\n    \n    const {user} = React.useContext(User);\n    \n    React.useEffect(() => {\n        \n        console.log(\"USER\", user);\n        \n        \n        \n    }, [user]);\n    \n    return (\n    \n    <div>\n    \n            <h4>Home page</h4>\n            <div>{JSON.stringify({user})}</div>\n    \n            <Blogs/>\n            \n            <Footer/>\n    </div>\n    );\n};\n\nexport default Home;","import React from \"react\";\nimport {User} from \"../auth/UserContext\";\n\nconst About = props => {\n    \n    const {user} = React.useContext(User);\n    \n    \n    return (\n    \n    <div>\n    \n            <h4>About page</h4>\n            <div>{JSON.stringify({user})}</div>\n    \n    </div>\n    );\n};\n\nexport default About;","import React from \"react\";\n\n\nconst BlogPost = props => {\n    \n    const [text, setText] = React.useState(\"\");\n    const [title, setTitle] = React.useState(\"\");\n    const [error, setError] = React.useState(false);\n    const [posted, setPosted] = React.useState(false);\n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n    \n    const textRef = React.useRef(\"\");\n    const titleRef = React.useRef(\"\");\n    \n    \n    \n    React.useEffect(() => {\n        \n        console.log(\"BLOG EFFECT!\");\n        \n        \n        \n        \n        \n        \n    }, []);\n   \n    const handleTitle = (e) => {\n        \n        setTitle({[e.target.name]: e.target.value});\n    };\n    \n    const handleText = (e) => {\n        \n        setText({[e.target.name]: e.target.value});\n    };\n  \n    \n    const handlePost = (e) => {\n        \n        e.preventDefault();\n        console.log(\"POST BLOG!\");\n        \n        console.log(\"DATA!\", title, text);\n        \n        let token = localStorage.getItem(\"accessToken\");\n        \n        \n        let titleData = title[\"title\"];\n        let textData = text[\"text\"];\n        \n        fetch(`${urlPath}/api/post_blog`, {\n            method:\"POST\",\n            mode:\"cors\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\": \"application/json\",\n                \"Access-Allow-Control-Origin\": \"*\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            \n            body: JSON.stringify({\n                \n                titleData,\n                textData\n            })\n            \n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                \n                throw new Error(resp.status);\n                \n            }else{\n                \n                \n                return resp.json();\n                \n            }\n            \n        })\n        .then(json => {\n            \n            \n            console.log(\"JSON BLOG\", json);\n            \n            \n            var checkBlog = json[\"blog\"];\n            \n            if(checkBlog){\n                \n                \n                setPosted(true);\n                setError(false);\n                \n                setTitle(\"\");\n                setText(\"\");\n                textRef.current.value = \"\";\n                titleRef.current.value = \"\";\n                \n                \n            }\n            else{\n                \n                setPosted(false);\n                setError(true);\n                \n                \n            }\n            \n            \n            \n            \n        })\n        .catch(error => {\n            \n            console.log(error);\n            \n            \n        });\n       \n        \n        \n        \n        \n    };\n    \n    \n    \n    \n    \n    return (\n    \n    <div>\n    \n            <center>\n        <h4>Post a new Blog</h4>\n            <hr/>\n                \n        {error?(\n                    \n          <h4>Error! Invalid inputs. Please try again</h4>  \n                    \n            ):(\n                    \n               null     \n            )}\n                \n                \n        {posted?(\n                    \n         <h4>Success! You've posted a new blog</h4>  \n                    \n                ):(\n                   null \n                    \n                )}\n    \n        <form id=\"blog-container\" onSubmit = {handlePost}>\n            \n            <label>Title</label><br/>\n            <input ref = {titleRef} type=\"text\" name=\"title\" placeholder=\"Add a title...\" required\n                onChange = {handleTitle}/>\n            <br/>\n            <br/>\n            \n            <textarea ref={textRef} placeholder=\"Say something cool!\" name=\"text\" required\n                onChange = {handleText}></textarea>\n            <br/>\n            \n            <input type=\"submit\" value=\"Post\"/>\n        </form>\n                \n                \n                \n        </center>\n    \n    \n    </div>\n    );\n};\n\nexport default BlogPost;","import React from \"react\";\nimport {User} from \"../auth/UserContext\";\nimport jwt_decode from \"jwt-decode\";\nimport BlogPost from \"../components/BlogPost\";\nimport \"../css/profile.css\";\n\nclass Profile extends React.Component{\n    \n    static contextType = User;\n\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            image: \"No Image...\",\n            username: \"\",\n            id: \"\",\n            email: \"\",\n            blog:false,\n            loading:true,\n            user:null,\n            jwtId:null,\n            user:\"No data\",\n            urlPath:`https://holistic-blogs.herokuapp.com`\n        }\n        \n        this.handleInfo = this.handleInfo.bind(this);\n    }\n\n    handleInfo = (username, id, sub) => {\n        \n        console.log(\"HANDLE INFO!\");\n        console.log(username, id, sub);\n        \n            fetch(`${this.state.urlPath}/api/view_profile/${username}/${id}`,{\n                method:\"GET\",\n                mode:\"cors\",\n                headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                \"Access-Allow-Control-Origin\": \"*\"\n            }\n        })\n        .then(resp => {\n\n            if(!resp.ok){\n                throw new Error(resp.status);\n            }\n            else{\n                return resp.json();\n            }\n\n        })\n        .then(json => {\n            console.log(\"JSON!\");\n            console.log(json);\n\n            var info = json[1];\n\n            var checkID = parseInt(id);\n            var checkUser = json[0][\"view\"];\n\n            if(checkUser){\n\n                if(sub !== null){\n\n                    this.setState({loading: false});\n\n                    if(username === info[\"username\"] && checkID === info[\"id\"] && checkID !== sub){\n\n                        this.setState({image: info[\"image\"]});\n                        this.setState({id: info[\"id\"]});\n                        this.setState({username: info[\"username\"]});\n                        this.setState({email: info[\"email\"]});\n                        this.setState({blog:false});\n                        // USER VIEWING ANOTHER USER\n\n                    }else if(username === info[\"username\"] && checkID === info[\"id\"] && checkID === sub){\n\n\n                        this.setState({image: info[\"image\"]});\n                        this.setState({id: info[\"id\"]});\n                        this.setState({username: info[\"username\"]});\n                        this.setState({email: info[\"email\"]});\n\n                        this.setState({blog:true});\n                        // USER VIEWING OWN PROFILE\n\n                    }else{\n\n                        console.log(\"NOT THE SAME USER TEST!\");\n                        this.setState({id: info[\"id\"]});\n                        this.setState({username: info[\"username\"]});\n                        this.setState({image:info[\"image\"]});\n                        this.setState({blog:false});\n                        // USER VIEWING ANOTHER USER\n                    }\n\n                }else{\n\n                    this.setState({id: info[\"id\"]});\n                    this.setState({username: info[\"username\"]});\n                    this.setState({image:info[\"image\"]});\n                    this.setState({loading:false});\n                    this.setState({exist:true});\n                    this.setState({blog:false});\n                    // USER EXISTS, VIEWED BY VISITOR\n\n                }\n\n            }\n            else{\n                this.setState({loading:false});\n                this.setState({exist:true});\n                this.setState({blog:false});\n                // NO USER EXISTS\n            }\n\n        })\n        .catch(error => {\n            console.log(error);\n            console.log(\"CATCH ERROR!\");\n        });\n        \n    };\n\n    componentDidMount(){\n\n            const user = this.context;\n            let token = localStorage.getItem(\"accessToken\");\n\n            console.log(\"USER\", user);\n        \n            if(user !== null){\n            \n                if(this.props.match.params !== {}){\n\n                    this.setState({username: this.props.match.params.username});\n                    this.setState({id: this.props.match.params.id});\n\n                    if(token){\n\n                        let decoded =  jwt_decode(token);\n\n                        let sub = decoded[\"sub\"];\n                        const username = this.props.match.params.username;\n                        const id = parseInt(this.props.match.params.id);\n\n                        console.log(typeof(id), typeof(sub));\n\n                        this.handleInfo(username,\n                                            id,\n                                              sub);\n                        }\n                \n                }\n\n                else{\n\n                    this.setState({user: user[\"user\"]});\n                    this.setState({username: user[\"user\"][\"username\"]});\n                    this.setState({id: user[\"user\"][\"id\"]});\n\n                     this.setState({image: user[\"user\"][\"image\"]});\n                    this.setState({email: user[\"user\"][\"email\"]});\n\n                    this.setState({blog:true});\n                    this.setState({loading: false});\n\n                    console.log(\"EMAIL\", user[\"user\"][\"email\"], this.state.email);\n                }\n        }\n        \n        else{\n            this.setState({username: this.props.match.params.username});\n            this.setState({id: this.props.match.params.id});\n            \n            if(token){\n            \n                let decoded =  jwt_decode(token);\n                \n                let sub = decoded[\"sub\"];\n                const username = this.props.match.params.username;\n                const id = parseInt(this.props.match.params.id);\n                \n                console.log(typeof(id), typeof(sub));\n                \n            this.handleInfo(username,\n                                    id,\n                                      sub);\n            }\n            else{\n                \n                console.log(\"ELSE\", this.props.match.params);\n                \n                this.handleInfo(this.props.match.params.username,\n                                    this.props.match.params.id,\n                                      null);\n            }\n        }\n\n        \n    };\n\n    render(){\n        \n      return (  \n        \n            <div>\n    <center>\n            <>\n            {this.state.loading? (\n                 <h4>Loading page....</h4>\n               \n                \n                ):(\n                \n                <>\n                    \n                {this.state.exist? (\n                        \n                    <h4>This profile does not exist</h4>\n                        \n                        ):(\n                        \n                        <>\n                        \n\n                        <br/>\n                        \n                        <div id=\"profile-container\">\n                            <img id=\"profile-image\" src={this.state.image} alt=\"MISSING>>>>\"/>\n                            <h4>My Email: {this.state.email}</h4>\n\n                            <h4>Username: <span id=\"profile-username\">{this.state.username}</span></h4>\n                            \n                             <>    \n                        {this.state.blog? (\n                             \n                               <BlogPost/>\n                                \n                        ):(\n                                null\n                                    \n                            )}\n                        </>\n                            \n                            \n                        </div>\n                      \n                                \n                                \n                        </>\n\n                        \n                        )}\n                </>\n                \n                )}\n           </>\n            \n            \n    </center>\n    \n    </div>\n    \n        \n        \n        \n        \n        \n        \n        \n        );\n        \n    };\n    \n};\nexport default Profile;","import React from \"react\";\nimport {Route, Switch, Redirect, BrowserRouter as Router, useHistory} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport {User} from \"../auth/UserContext\";\nimport Footer from \"../components/Footer\";\n\nconst Login = props => {\n    \n    \n    const emailRef = React.useRef(\"\");\n    const passwordRef = React.useRef(\"\");\n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n    const {user, setUser} = React.useContext(User);\n    \n    const history = useHistory();\n    \n    \n    const handleSubmit = (e) => {\n        \n        e.preventDefault();\n        console.log(e);\n        \n        console.log(emailRef.current.value, passwordRef.current.value);\n        \n        \n                fetch(`${urlPath}/api/login`, {\n            \n            method:\"POST\",\n            mode:\"cors\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Accept\": \"application/json\",\n                \"Access-Allow-Control-Origin\": \"*\"\n            },\n            \n            body: JSON.stringify({\n                \"email\":emailRef.current.value,\n                \"password\":passwordRef.current.value\n            })\n            \n        })\n        .then(resp => {\n            \n            console.log(resp.ok);\n            console.log(resp.status);\n            console.log(resp);\n            if(!resp.ok){\n                \n                throw new Error(resp.status);\n            }\n            else{\n                return resp.json();\n            }\n        })\n        .then(json => {\n            \n            console.log(\"JSON\");\n            console.log(json);\n            \n            var validLogin = json[0][\"login\"];\n            \n            if(validLogin){\n                \n                \n                var list = [];\n                \n                const accessToken = json[1];\n                \n                const userJson = json[2];\n                \n                console.log(\"USER JSON LOGIN\", userJson);\n                \n                list.push(userJson[\"username\"]);\n                list.push(userJson[\"image\"]);\n                list.push(userJson[\"id\"]);\n                list.push(userJson[\"email\"]);\n                \n                console.log(\"LOGIN CACHING!\");\n                \n                caches.open(\"currentUser\").then(cache => {\n                    cache.addAll(list).then(() => {\n                        console.log(\"LIST DATA SAVED LOGIN!\");\n                    });\n                });\n                \n            \n                console.log(\"USER JSON\", userJson);\n                \n                setUser(userJson);\n                \n                localStorage.setItem(\"accessToken\", accessToken);\n                \n                console.log(\"LOGIN PROPS\", props);\n                history.push(`/profile/${userJson[\"username\"]}/${userJson[\"id\"]}`);\n                \n                emailRef.current = \"\"; passwordRef.current = \"\";\n                \n                console.log(\"LOGIN REFS\", emailRef.current.value, passwordRef.current.value);\n            }\n            else{\n                \n                console.log(\"LOGIN ERROR!\");\n                \n            }\n            \n        })\n        .catch(error => {\n            \n            console.log(error);\n            console.log(\"LOGIN ERROR\");\n            \n            \n        })\n        \n\n                \n    };\n    \n    \n    \n    return (\n    \n    <div>\n        <center>\n            <h4>This is the Login page</h4>\n            <hr/>\n    \n                <form  id=\"form-container\" onSubmit={handleSubmit}>\n                    \n                    <label>Email</label>\n                    <br/>\n                    <input  type=\"email\" name=\"email\" ref={emailRef} \n                        placeholder=\"Enter email...\"\n                        required/>\n                    <br/>\n                    \n                    <label>Password</label>\n                    <br/>\n                    <input type=\"password\" name=\"password\" ref={passwordRef} \n                        placeholder=\"Enter password...\"\n                        required/>\n                    <br/>\n                    \n                    \n                    <input type=\"submit\" value=\"Login\"/>\n                    \n                </form>\n                \n                \n            </center>\n            \n            <Footer/>\n    \n    </div>\n    );\n};\n\nexport default Login;","import React from \"react\";\nimport {Route, Switch, Redirect, BrowserRouter as Router} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport {User} from \"../auth/UserContext\";\nimport withAuth from \"../components/withAuth\";\nimport Footer from \"../components/Footer\";\n\n\nconst Signup = props => {\n    \n    const {user} = React.useContext(User);\n    \n    const [username, setUsername] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\n    const [isSignedUp, setIsSignedUp] = React.useState(false);\n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n    \n    const handleSubmit = (e) => {\n        \n        e.preventDefault();\n        console.log(e);\n        \n        console.log(\"SIGNED UP!\", username, email, password, confirmPassword);\n        \n        \n        var usernameData = username[\"username\"];\n        var emailData = email[\"email\"];\n        var passwordData = password[\"password\"];\n        var confirmPasswordData = confirmPassword[\"confirmPassword\"];\n\n        fetch(`${urlPath}/api/signup`, {\n            \n            method:\"POST\",\n            mode:\"cors\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Accept\": \"application/json\",\n                \"Access-Allow-Control-Origin\": \"*\"\n            },\n            \n            body: JSON.stringify({\n                usernameData,\n                emailData, \n                passwordData,\n                confirmPasswordData\n            })\n            \n        })\n        .then(resp => {\n            \n            console.log(resp.ok);\n            console.log(resp.status);\n            console.log(resp);\n            if(!resp.ok){\n                \n                throw new Error(resp.status);\n            }\n            else{\n                \n                return resp.json();\n                \n            }\n            \n        })\n        .then(json => {\n            \n            console.log(\"JSON\");\n            console.log(json);\n            \n            var validSignup = json[0][\"signup\"];\n            \n            if(validSignup){\n                \n                setIsSignedUp(true);\n                \n            }\n            else{\n                \n                console.log(\"SIGN UP ERROR!\");\n                setIsSignedUp(false);\n                \n            }\n            \n        })\n        .catch(error => {\n            \n            console.log(error);\n            console.log(\"ERROR\");\n        });\n        \n    };\n    \n    \n    const handleUsername = (e) => {\n        \n        setUsername({[e.target.name]: e.target.value})\n    };\n    \n    \n    const handleEmail = (e) => {\n        \n        setEmail({[e.target.name]: e.target.value})\n    };\n    \n    \n    const handlePassword = (e) => {\n        \n        setPassword({[e.target.name]: e.target.value})\n    };\n    \n    \n    const handleConfirmPassword = (e) => {\n        \n        setConfirmPassword({[e.target.name]: e.target.value})\n    };\n    \n    \n    React.useEffect(() => {\n        \n        console.log(\"SIGN UP EFFECT!\");\n        console.log(\"USER\", user);\n        \n//         if(user !== null){\n            \n//             history.push(\"/\");\n            \n            \n//         }\n        \n        \n        \n    }, [user]);\n    \n\n    \n    \n    if(isSignedUp){\n        \n        return (\n        \n            <Router>\n                <Redirect to=\"/login\"/>\n                <Switch>\n                    <Route exact path =\"/login\" component={Login}/>\n                </Switch>\n        </Router>\n            \n            )\n    }\n    \n    \n    \n    return (\n    \n    <div>\n    \n            <center>\n            <h4>This is the Signup page</h4>\n            <hr/>\n    \n                <form id=\"form-container\"  onSubmit={handleSubmit}>\n                    \n                    <label>Username</label>\n                    <br/>\n                    <input type=\"text\" name=\"username\" onChange={handleUsername}\n                        placeholder=\"Enter username...\"\n                        required/>\n                    <br/>\n                    \n                    \n                    <label>Email</label>\n                    <br/>\n                    <input type=\"email\" name=\"email\" onChange={handleEmail}\n                        placeholder=\"Enter email...\"\n                        required/>\n                    <br/>\n                    \n                    <label>Password</label>\n                    <br/>\n                    <input type=\"password\" name=\"password\" onChange={handlePassword}\n                        placeholder=\"Enter password...\"\n                        required/>\n                    <br/>\n                    \n                    \n                    \n                    <label>Confirm Password</label>\n                    <br/>\n                    <input type=\"password\" name=\"confirmPassword\" onChange={handleConfirmPassword}\n                        placeholder=\"Confirm password...\"\n                        required/>\n                    <br/>\n                    \n                    <input type=\"submit\" value=\"Sign up\"/>\n                    \n                    \n                    \n                </form>\n                \n                \n            </center>\n  \n            <Footer/>\n    </div>\n    );\n};\n\nexport default withAuth(Signup);\n\n\n\n\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {User} from \"../auth/UserContext\";\n\nconst withAuth = (Component) => {\n    \n\n  const AuthRoute = () => {\n      const {user} = React.useContext(User);\n    const isAuth = !localStorage.getItem(\"accessToken\");\n      \n    if (isAuth && user === null) {\n      return <Component />;\n    } else {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  return AuthRoute;\n};\n\nexport default withAuth;","function NotFound(props) {\n//   let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{props.location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nexport default NotFound;","import React from \"react\";\nimport {useParams, Link} from \"react-router-dom\";\nimport \"../css/comment.css\";\n\n\nconst Comment = props => {\n    \n    const textRef = React.useRef(\"\");\n    const blogIdRef = React.useRef(0);\n    \n    const {username, title, id} = useParams();\n    \n    const [comments, setComments] = React.useState([]);\n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n    \n    const fetchComments = async (blogID) => {\n        \n        console.log(\"BLOG ID FETCH COMMENTS!\", blogID);\n        fetch(`${urlPath}/api/get_comments/${blogID}`, {\n            \n            method: \"GET\",\n            mode:\"cors\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                \"Access-Allow-Control-Origin\":\"*\",\n            }\n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                \n                throw new Error(resp.status);\n            }else{\n                \n                return resp.json();\n                \n            }\n            \n            \n        })\n        .then(json => {\n            \n            \n            console.log(\"JSON!\");\n            console.log(json);\n            \n            setComments(json[\"comments\"]);\n            \n        })\n        .catch(error => {\n            \n            console.log(\"GET COMMENTS ERROR!\");\n            console.log(error);\n            \n        })\n        \n    };\n    \n    \n    const handleComment = (e) => {\n        \n        e.preventDefault();\n        console.log(\"HANDLE COMMENT!\");\n        \n        let text = textRef.current.value;\n        var value = textRef;\n        \n        let blogID = blogIdRef.current\n        \n        console.log(textRef.current.value);\n        \n        \n        \n        let token = localStorage.getItem(\"accessToken\");\n        \n        value.current.value = \"\";\n        \n        fetch(`${urlPath}/api/new_comment`,{\n            \n            method:\"POST\",\n            mode:\"cors\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                \"Access-Allow-Control-Origin\":\"*\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                \n                text,\n                blogID\n                \n                \n            })\n            \n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                \n                throw  new Error(resp.status);\n            }\n            else{\n                \n                return resp.json();\n                \n            }\n            \n            \n        })\n        .then(json => {\n            \n            console.log(\"JSON\", json);\n            \n            fetchComments(blogID);\n            \n            \n        })\n        .catch(error => {\n            console.log(error);\n            \n            \n        })\n            \n        \n        \n    };\n    \n    React.useEffect(() => {\n    \n        fetchComments(id);\n        console.log(\"BLOG URL\", username, title, id);\n        \n        console.log(typeof(id));\n        \n        blogIdRef.current = parseInt(id);\n        console.log(\"comments!\");\n        console.log(\"BLOG REF ID\", blogIdRef.current);\n    \n    \n    }, [id, title, username]);\n    \n    \n    \n  return (  \n    \n    <div>\n          <h4>Comments Page</h4>\n          \n          <form id=\"comment-container\" onSubmit = {handleComment}>\n              <textarea id=\"comment-textarea\" ref = {textRef} placeholder=\"Add a comment..\" required></textarea>\n                  <br/>\n                  <input type=\"submit\" value=\"Comment\"/>\n          </form>\n          <br/>\n          <hr/>\n          \n          <div id=\"comment-div\">\n          {comments.map((comment, i) => (\n          \n              <div key={i} className=\"comment-container\">\n                      <div className=\"comment-user-info\">\n                          <Link to={`/profile/${comment.author}/${comment.user_id}`}>\n                          <img className=\"comment-image\" src={comment.image}/>\n                          <h4 className=\"comment-author\"> {comment.author}</h4>\n                          </Link>\n                          <span className=\"comment-timestamp\">{comment.timestamp}</span>\n                      </div>\n                      \n                      <div className=\"comment-text\">\n                          {comment.comment}\n                      </div>\n              </div>\n          ))}\n          \n          <br/>\n          </div>\n \n    \n    </div>\n    \n    );\n};\nexport default Comment;\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport {withRouter, Link} from \"react-router-dom\";\nimport Comment from \"../components/Comment\";\nimport \"../css/blog.css\";\n\nclass Blog extends React.Component{\n    \n    constructor(props){\n        super(props);\n        \n        this.state = {\n            username: \"\",\n            title: \"\",\n            id: \"\",\n            text: \"\",\n            data: null,\n            loading: true,\n            exist: false,\n            timestamp: null,\n            image: \"No image...\",\n            urlPath:`https://holistic-blogs.herokuapp.com`\n        }\n        \n        this.fetchBlog = this.fetchBlog.bind(this);\n    }\n    \n     fetchBlog = async (blogId) => {\n        console.log(\"FETCH BLOG DATA!\");\n        \n        fetch(`${this.state.urlPath}/api/blog/${blogId}`, {\n            method:\"GET\",\n            mode: \"cors\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                \"Access-Allow-Control-Origin\":\"*\",\n            }\n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                throw new Error(resp.status);\n            }\n            \n            else{\n                return resp.json();\n            }\n            \n        })\n        .then(json => {\n            console.log(\"ONE BLOG JSON!\");\n            console.log(json);\n            console.log(\"EXISTS\", json[\"exists\"]);\n            \n//             console.log(\"BLOG DATA\", json[\"blog\"][0]);\n            \n            if(json[\"exists\"]){\n                \n                let jsonUsername = json[\"blog\"][0][\"author\"];\n                let jsonText = json[\"blog\"][0][\"text\"];\n                let jsonId = json[\"blog\"][0][\"id\"];\n                let jsonTitle = json[\"blog\"][0][\"title\"];\n                let jsonTimestamp = json[\"blog\"][0][\"timestamp\"];\n                let jsonImage = json[\"blog\"][0][\"image\"];\n                \n                this.setState({\"username\":jsonUsername});\n                this.setState({\"id\":jsonId});\n                this.setState({\"text\":jsonText});\n                this.setState({\"title\":jsonTitle});\n                this.setState({loading:false});\n                this.setState({exist:false});\n                this.setState({\"timestamp\": jsonTimestamp});\n                this.setState({\"image\": jsonImage});\n                \n            }\n            else{\n                \n                console.log(\"This blog does not exist!\");\n                this.setState({loading:false});\n                this.setState({exist:true});\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n        }\n    \n    componentDidMount(){\n        console.log(\"BLOG POST MOUNTED!\");\n        console.log(\"BLOG POST PARAMS\", this.props.match.params.username, this.props.match.params.title, this.props.match.params.id);\n        console.log(\"BLOG DATA!\", this.props.blogData);\n        console.log(\"PROPS\", this.props);\n        console.log(\"HISTORY\", this.props.history);\n        this.fetchBlog(this.props.match.params.id);\n    }\n    \n    render(){\n        \n        return (\n    \n        <div>\n                <>\n                {this.state.loading?(\n                    <h4>Loading...</h4>\n                    \n                    ):(\n                   \n                <>\n                {this.state.exist?(\n                            \n                    <h4>This blog does not exist or has been deleted</h4>\n                            \n                    ):(\n                 <>\n                                    <center>\n                    <h4>This is a Blog post page</h4>\n                    <div id=\"blog-container\">\n                    <h2>{this.state.title}</h2>\n                    <Link to={`/profile/${this.state.username}/${this.state.id}`}>\n                    <img id=\"blog-author-image\" src={this.state.image}/>\n                    <h4>Author: {this.state.username}</h4>\n                    </Link>\n                    <h4>Posted: {this.state.timestamp}</h4>\n                    <p>{this.state.text}</p>\n                    </div>\n                    <hr/>\n                                    \n                    <Comment/>\n\n                    </center>\n                </>\n                            \n                        )}\n                    </>\n                    )}\n                </>\n    </div>\n    \n        );\n    };\n    \n};\n    \n\n\nexport default withRouter(Blog);","import React from \"react\";\nimport {Switch, Link, Route, withRouter} from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport About from \"../pages/About\";\nimport Blogs from \"../pages/Blogs\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport Profile from \"../pages/Profile\";\nimport NotFound from \"../pages/NotFound\";\nimport Blog from \"../pages/Blog\";\n\nfunction Navbar(props){\n    \n    \n        const navbarHandleLogin = (username, id) => {\n        \n        \n        console.log(\"USERNAME ID\", username, id);\n        \n        props.navbarLogin(username, id)\n        \n    };\n    \n    \n    \n    \n    return (\n    \n        <>\n            <ul id=\"navbar\">\n                <li className=\"navbar-li\">\n                    <Link to=\"/\">Home</Link>\n                </li>\n                \n                 <li className=\"navbar-li\">\n                    <Link to=\"/about\">About</Link>\n                </li>\n                \n                 <li className=\"navbar-li\">\n                    <Link to=\"/blogs\">Blogs</Link>\n                </li>\n                \n                 <li className=\"navbar-li\">\n                    <Link to=\"/login\">Login</Link>\n                </li>\n                \n                 <li className=\"navbar-li\">\n                    <Link to=\"/signup\">Sign up</Link>\n                </li>\n            </ul>\n            <br/>\n        \n            <Switch>\n            <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/blogs\" component={Blogs}/>\n                <Route exact path=\"/login\">\n                    <Login setLoginProfile = {navbarHandleLogin} />\n                </Route>\n                <Route exact path=\"/signup\" component={Signup}/>\n                <Route exact path=\"/profile/:username/:id\" component={Profile} />\n                <Route exact path=\"/blog/:username/:title/:id\" component={Blog}/>\n                <Route component={NotFound} path=\"*\"/>\n    \n            </Switch>\n    </>\n    \n    );\n    \n};\n\nexport default withRouter(Navbar);\n","import React from \"react\";\nimport \"../css/bell.css\";\nimport jwt_decode from \"jwt-decode\";\nimport {Link, withRouter, Redirect, Switch, Route, BrowserRouter as Router} from \"react-router-dom\";\nimport Profile from \"../pages/Profile\";\n\nconst notifyHidden = {\n  \n    marginRight:\"-320px\",\n    transition: \"0.2s ease-out\"\n}\n\nconst notifyShow = {\n   \n    marginRight:\"0px\",\n    transition: \"0.2s ease-in\"\n}\n\n\nconst bellShow = {\n    \n    backgroundColor:\"rgba(220, 50, 50, 0.9)\"\n}\n\nconst bellHide= {\n    backgroundColor:\"Transparent\"\n}\n\n\n\n\n\nconst Bell = props => {\n    \n    const [currentNotifyStyle, setCurrentNotifyStyle] = React.useState(notifyHidden);\n    const [notifyList, setNotifyList] = React.useState([]);\n    const [loading, setLoading] = React.useState(true);\n    const [clickedBell, setClickedBell] = React.useState(false);\n    \n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n    \n    const [toggleBell, setToggleBell] = React.useState(bellHide);\n    \n    const [authorName, setAuthorName] = React.useState(false);\n    const [authorId, setAuthorId] = React.useState(false);\n    const [counting, setCounting] = React.useState(0);\n    \n    const fetchBell = async (id, token) => {\n        \n        if(!clickedBell){\n        \n        fetch(`${urlPath}/api/notify/${id}`,{\n            method:\"GET\",\n            mode:\"cors\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                \"Access-Allow-Control-Origin\":\"*\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                throw new Error(resp.status);\n            }\n            else{\n                return resp.json();\n            }\n        })\n        .then(json => {\n        \n            console.log(\"BELL JSON!\", json);\n            \n            setClickedBell(true);\n            \n            let check = json[\"check\"];\n            \n            if(check){\n                console.log(json[\"new\"]);\n                let bellCountJson = 0;\n                \n                for(var i = 0; i < json[\"new\"].length; i++){\n                    \n                    console.log(i);\n                    if(json[\"new\"][i].bell === true){\n                        \n                        console.log(i, json[\"new\"][i].bell);\n                        bellCountJson += 1;\n                        \n                    }\n                }\n                \n                \n                if(bellCountJson > 0){\n                    \n                    setToggleBell(bellShow);\n                    \n                    setCounting(bellCountJson);\n                    \n                    \n                }\n                setNotifyList(json[\"new\"]);\n                \n                \n                setLoading(false);\n                \n                \n                \n            }\n            else{\n                setLoading(false);\n            }\n            \n        })\n        .catch(error => {\n            console.log(\"ERROR BELL!\", error);\n            setLoading(false);\n        });\n      \n        }else{\n            setToggleBell(bellShow);\n        }\n    };\n    \n    \n    const handleRedirectAuthor = (getAuthorName, getAuthorId) => {\n        \n        \n//         history.push(`/profile/${getAuthorName}/${getAuthorId}`);\n        setAuthorName(getAuthorName);\n        setAuthorId(getAuthorId);\n        \n    };\n\n    const handleToken = async () => {\n        \n        let token = await localStorage.getItem(\"accessToken\");\n        \n        console.log(\"BELL TOKEN\", token);\n        \n        let decoded = await jwt_decode(token);\n        \n        console.log(\"BELL DECODED!\", decoded);\n        \n        \n        console.log(decoded);\n        \n         let sub = decoded[\"sub\"];\n        \n        console.log(\"BELL SUB\", sub);\n        \n        let id = parseInt(sub);\n        \n        fetchBell(id, token);\n        \n        \n    };\n    \n    \n    React.useEffect(() => {\n        \n        \n        handleToken();\n        \n\n        \n    }, []);\n    \n    const handleNotify = async (e) => {\n        \n        if(currentNotifyStyle[\"marginRight\"] !== \"0px\"){\n            setCurrentNotifyStyle(notifyShow);\n            \n            setToggleBell(bellHide);\n            setCounting(0);\n            let token = await localStorage.getItem(\"accessToken\");\n            let decoded = await jwt_decode(token);\n            \n            console.log(\"HANDLE NOTIFY\", decoded);\n            let sub = decoded[\"sub\"];\n            console.log(sub);\n\n            console.log(\"BELL SUB\", sub);\n\n            let userId = parseInt(sub);\n            console.log(\"USER ID\", userId);\n            \n\n            fetch(`${urlPath}/api/clear_bell_number`,{\n                method:\"POST\",\n                mode:\"cors\",\n               headers: {\n                \"Content-Type\":\"application/json\",\n                \"Accept\": \"application/json\",\n                \"Access-Allow-Control-Origin\": \"*\",\n               \"Authorization\": `Bearer ${token}`\n            },\n                body:JSON.stringify({\n                \n                 \"userID\":userId\n                \n            })\n        })\n        .then(resp => {\n            \n            if(!resp.ok){\n                \n                throw new Error(resp.status);\n            }\n            else{\n                return resp.json();\n            }\n        })\n        .then(json => {\n            \n            console.log(\"JSON\");\n            console.log(json);\n  \n            })\n            .catch(error => {\n                \n                console.log(\"BELL ERROR!\", error);\n                \n            });\n                  \n            \n            \n        }else{\n            setCurrentNotifyStyle(notifyHidden);\n        }\n    };\n    \n    \n    if(authorName &&\nauthorId){\n        \n        return (\n        \n            <Router>\n        \n                <Redirect to={`/profile/${authorName}/${authorId}`}/>\n                <Switch>\n                    <Route exact path={`/profile/${authorName}/${authorId}`} component={Profile}/>\n                </Switch>\n        </Router>\n            \n            )\n    }\n    \n    \n    return (\n    <>\n    <li id=\"bell\" onClick={handleNotify}>\n        <span id=\"bell-count\" style={toggleBell}>{counting > 0? (counting):(null)}</span>\n            <i className=\"fa fa-bell\"></i>\n    </li>\n       \n            \n    <div id=\"notify-div\" style={currentNotifyStyle}>\n        \n       \n        {loading? (\n            \n            <h5>Loading...</h5>\n        ):(\n             <>\n            {notifyList.map((notify, i) => (\n            <div key={i} className=\"notify-container\" id={notify.id}>\n                <Link onClick = {() => handleRedirectAuthor(notify.author, notify.author_id)} \n                    to={`/profile/${notify.author}/${notify.author_id}`}>\n                    \n                <img className=\"notify-user-image\" src={notify.author_image}/>\n                <div className=\"notify-username\">{notify.author}</div>\n                </Link>\n                        \n                <Link to={`/blog/${notify.username}/${notify.title}/${notify.blog_id}`}>\n                    <div className=\"notify-title\">{notify.title}</div>\n                </Link>\n                <div className=\"notify-datetime\">Posted: {notify.timstamp}</div>\n                    \n                <span className=\"notify-text\">\n                {notify.text}\n                </span>\n            </div>\n               \n                    ))}\n                 </>\n            )}\n            \n        \n    </div>\n    </>\n    \n    );\n};\n\nexport default withRouter(Bell);\n","import React from \"react\";\nimport {Switch, Link, Route, BrowserRouter as Router, withRouter, Redirect} from \"react-router-dom\";\nimport {createBrowserHistory} from \"history\";\nimport Home from \"../pages/Home\";\nimport Blogs from \"../pages/Blogs\";\nimport Login from \"../pages/Login\";\nimport Profile from \"../pages/Profile\";\nimport NotFound from \"../pages/NotFound\";\nimport Blog from \"../pages/Blog\";\nimport Bell from \"./Bell\";\n\nconst NavbarAuth = props => {\n    \n    const history = createBrowserHistory();\n    const [redirect, setRedirect] = React.useState(false);\n    \n    const handleLogout = (e) => {\n        console.log(\"LOGOUT!\");\n        props.navbarAuth();\n        \n    };\n    \n    \n    if(redirect){\n        \n        <Router history = {history}>\n        \n            <Redirect to={`/profile/${props.username}/${props.id}`}/>\n            <Switch>\n            <Route exact path={`/profile/${props.username}/${props.id}`} component={Profile}/>\n        \n            </Switch>\n        </Router>\n    }\n    \n    \n    return (\n    \n        <>\n            <ul id=\"navbar\">\n                <li className=\"navbar-li\">\n                    <Link to=\"/\">Home</Link>\n                </li>\n                \n                <li className=\"navbar-li\" id=\"navbar-profile\">\n                    <Link to={`/profile/${props.username}/${props.id}`}>{props.username}</Link>\n                </li>\n                \n    \n                 <li className=\"navbar-li\">\n                    <Link to=\"/blogs\">Blogs</Link>\n                </li>\n                \n                 <li className=\"navbar-li\" onClick={handleLogout}>\n                    <Link to=\"/login\">Logout</Link>\n                </li>\n                \n             <Bell/>\n                \n            </ul>\n        <br/>\n            \n            \n            <Switch>\n            <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/blogs\" component={Blogs}/>\n                <Route exact path=\"/login\" component={Login}/>\n                \n                <Route exact path=\"/profile/:username/:id\" component={Profile}/>\n                 \n                \n                \n                <Route exact path=\"/blog/:username/:title/:id\" component={Blog}/>\n                <Route component={NotFound} path=\"*\"/>\n            </Switch>\n    </>\n    \n    );\n    \n};\n\nexport default withRouter(NavbarAuth);\n","import Navbar from \"./components/Navbar\";\nimport NavbarAuth from \"./components/NavbarAuth\";\nimport {User} from \"./auth/UserContext\";\nimport React from \"react\";\nimport {useHistory, BrowserRouter as Router} from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App = props =>  {\n    \n    const [user, setUser] = React.useState(null);\n    const [isAuth, setIsAuth] = React.useState(false);\n    const [username, setUsername] = React.useState(\"\");\n    const [id, setId] = React.useState(\"\");\n    const history = useHistory();\n    const value = React.useMemo(() => ({user, setUser}), [user, setUser]);\n    const urlPath = `https://holistic-blogs.herokuapp.com`;\n\n    const HandleLogout = (e) => {\n        console.log(\"LOGOUT USER FROM APP\");\n        setUser(null);\n        console.log(\"APP USER\", user);\n        console.log(\"VALUE\", value);\n        \n        setUsername(\"\");\n        setId(\"\");\n        value[\"user\"] = null;\n        console.log(\"AFTER VALUE\", value);\n        localStorage.removeItem(\"accessToken\");\n        caches.delete(\"currentUser\").then(() => {\n            console.log(\"CACHE CURRENT USER REMOVED!\");\n        });\n        \n    }\n    \n    \n    \n        \n    React.useEffect(() => {\n        \n//         console.log(\"USE HISTORY\", useHistory);\n//         console.log(\"HISTORY\", props.history);\n        let token = localStorage.getItem(\"accessToken\");\n//         console.log(\"TOKEN NAVBAR\", token);\n        \n        \n        caches.open(\"currentUser\").then((cache) => {\n    \n            cache.keys().then(( Array) => {\n\n                console.log(Array);\n//                 var cacheUsername = Array[1][\"url\"].split(window.location.origin);\n//                 console.log(cacheUsername[1]);\n                \n            });\n        });\n        \n        \n        \n        if(user === null && token !== null){\n            \n            let cacheList = [];\n            \n            fetch(`${urlPath}/api/auth`,{\n                \n                method:\"GET\",\n                mode:\"cors\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Accept\":\"application/json\",\n                    \"Access-Allow-Control-Origin\":\"*\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(resp => {\n                \n                if(!resp.ok){\n                     throw new Error(resp.status);\n                    \n                }else{\n                    return resp.json();\n                }\n            })\n            .then(json => {\n                \n                console.log(\"JSON!\");\n                console.log(json);\n                \n                let checkAuth = json[\"auth\"];\n                \n                if(checkAuth){\n                    setUsername(json[\"username\"]);\n                    setId(json[\"id\"]);\n                    setUser(json);\n                    \n                    caches.has(\"currentUser\").then(function(boolean){\n                    if(!boolean){\n                        cacheList.push(json[\"username\"]);\n                        cacheList.push(json[\"id\"]);\n                        cacheList.push(json[\"image\"]);\n\n                        console.log(\"ADDING NEW CACHES FOR NEW CURRENT USER!\");\n\n                        caches.open(\"currentUser\").then((cache) => {\n\n                        cache.addAll(cacheList).then(() => {\n                            console.log(\"CACHE LIST\", cacheList);\n\n                                });\n                            });\n                        }\n                        \n                    });\n                    \n                }else{\n                    console.log(\"NOT CHECK AUTH NAVBAR\", checkAuth);\n                }\n            })\n            .catch(error => {\n                console.log(\"NAVBAR ERROR!\");\n                console.log(error);\n                localStorage.removeItem(\"accessToken\");\n                console.log(\"PROPS!\", props);\n                console.log(\"HISTORY ERROR\", history);\n                   \n            });\n        }\n        \n    }, []);\n    \n    \n  return (\n    <>\n         \n          {user !== null || localStorage.getItem(\"accessToken\") ? (\n               <>\n      <User.Provider value={value}>\n          <Router>\n         <NavbarAuth navbarAuth = {HandleLogout}  username={username} id={id} />\n          </Router>\n      </User.Provider>\n              </>\n              ):\n          \n          (\n              <>\n        <User.Provider value={value}>\n            <Router>\n        <Navbar />\n            </Router>\n        </User.Provider>\n              </>\n              \n              )}\n          \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}